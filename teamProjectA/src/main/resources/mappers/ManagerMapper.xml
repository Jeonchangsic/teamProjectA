<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.projectA.mapper.ManagerMapper">
	<!-- 숙소 요청 목록  -->
	<select id="requestList" resultType="lodgingVO">
		SELECT u.userid
			 , u.username
			 , u.uidx
			 , l.lidx
			 , l.limagename
			 , l.lodgingname
			 , l.lodgingkind
			 , l.lodgingaddr
		  FROM lodgingtb l, ausertb u
		 WHERE l.uidx = u.uidx
		   AND lodging = 'Waiting'
	</select>
	<!-- 숙소 승인  -->
	<update id="approval" parameterType="int">
		UPDATE ausertb
		   SET lodging = 'Y'
		 WHERE uidx = #{uidx}
	</update>
	<!-- 숙소 승인거부 -->
	<delete id="requestDel" parameterType="int">
		DELETE 
		  FROM lodgingtb
		 WHERE lidx = #{lidx}
	</delete>
	<update id="requestN" parameterType="int">
		UPDATE ausertb
		   SET lodging = 'N'
		 WHERE uidx = #{uidx}
	</update>
	<!-- 예약 리스트 -->
		<select id="reservlist" parameterType="ReservVO" resultType="ReservVO">
			SELECT 
				 u.username
				,l.lodgingname
				,v.reserv_date
				,u.userid
				,v.reserv_num
					FROM ausertb u, lodgingtb l, reservtb v, roomtb r
					where v.uidx = u.uidx
					  and v.ridx = r.ridx
					  and r.lidx = l.lidx
					
		</select>
		<!-- 문의 리스트 -->
		<select id="managerqnalist" resultType="qnaVO">
			SELECT a.username
					, q.qna_idx
					, q.qna_Qtitle
					, q.qna_Qdate 
					, q.qna_Acheck
				FROM ausertb a, QNATB q
				WHERE a.uidx = q.uidx
		</select>
		<!-- 문의 답변 -->
		<update id="qnaReply" parameterType="HashMap">
			UPDATE qnatb
				SET qna_Acontent = #{qna_Acontent}
					,qna_acheck = '답변완료'
				WHERE  qna_idx = #{qna_idx}
		</update>
		<!-- 회원리스트 -->
		<select id="userlistCount" resultType="int">
			SELECT count(uidx)
				FROM ausertb
		        WHERE uidx > 0 <!--총게시글 수 구한후 refid로 검색어 조건-->
		</select>
		<!--관리자회원 리스트+페이징+검색-->
	<select id="muserList" parameterType="HashMap" resultType="userVO">	
			SELECT uidx
					, userID
					, userName
					, userPhone
					, userEmail
					, userType
				FROM (
					SELECT uidx
							, userID
							, userName
							, userPhone
							, userEmail
							, userType
							, row_number() over(ORDER BY uidx DESC)
							 AS unum
					FROM ausertb
					)
					WHERE unum BETWEEN #{rowStart} AND #{rowEnd}
					
					ORDER BY uidx DESC
	</select>
</mapper>











