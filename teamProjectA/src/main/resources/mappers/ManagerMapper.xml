<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.projectA.mapper.ManagerMapper">
	<select id="lodgingCategory" resultType="LodgingVO">
		SELECT lodgingname
			,lidx
			,limagename
			FROM lodgingtb
	</select>
	
	<select id="lodgingID" parameterType="int" resultType="RoomVO">
		SELECT ridx
			 , rtype
			 , rnum
			 , rprice
			 , rimage1
			 , rimage2
			 , rimage3
			 , rimage4
			 , rimage5
		 FROM roomtb
		WHERE lidx = #{lidx}
	</select>
	<!-- 숙소 요청 목록  -->
	<select id="requestList" resultType="lodgingVO">
		SELECT u.userid
			 , u.username
			 , u.uidx
			 , l.lidx
			 , l.limagename
			 , l.lodgingname
			 , l.lodgingkind
			 , l.lodgingaddr
		  FROM lodgingtb l, ausertb u
		 WHERE l.uidx = u.uidx
		   AND lodging = 'Waiting'
	</select>
	<!-- 숙소 승인  -->
	<update id="approval" parameterType="int">
		UPDATE ausertb
		   SET lodging = 'Y'
		 WHERE uidx = #{uidx}
	</update>
	<!-- 숙소 승인거부 -->
	<delete id="requestDel" parameterType="int">
		DELETE 
		  FROM lodgingtb
		 WHERE lidx = #{lidx}
	</delete>
	<update id="requestN" parameterType="int">
		UPDATE ausertb
		   SET lodging = 'N'
		 WHERE uidx = #{uidx}
	</update>
	<!-- 예약 리스트 +페이징 -->
		<select id="reservlist" parameterType="SearchCriteria" resultType="ReservVO">
		SELECT * FROM (SELECT a.USERNAME,a.USERID, l.lodgingname, v.RESERV_DATE, v.RESERV_NUM
			,ROW_NUMBER() OVER(ORDER BY a.username desc) AS qnum
			FROM ausertb a, lodgingtb l, reservtb v, roomtb r
			WHERE a.uidx= v.UIDX
			AND v.ridx = r.ridx
			AND r.lidx = l.lidx)
			WHERE qnum BETWEEN #{rowStart} and #{rowEnd}
			ORDER BY username desc
					
		</select>
			<!--예약리스트  총 개수-->
	<select id="reservcount" resultType="int">
		<![CDATA[
		SELECT count(reserv_idx)
		FROM reservtb
		WHERE reserv_idx > 0
		]]>
	</select>
		<!-- 문의 리스트 -->
		<select id="managerqnalist" resultType="qnaVO">
			SELECT a.username
					, q.qna_idx
					, q.qna_Qtitle
					, q.qna_Qdate 
					, q.qna_Acheck
				FROM ausertb a, QNATB q
				WHERE a.uidx = q.uidx
		</select>
		<!-- 문의 답변 -->
		<update id="qnaReply" parameterType="HashMap">
			UPDATE qnatb
				SET qna_Acontent = #{qna_Acontent}
					,qna_acheck = '답변완료'
				WHERE  qna_idx = #{qna_idx}
		</update>
		<!-- 회원리스트 -->
		<select id="userlistCount" resultType="int">
			SELECT count(uidx)
				FROM ausertb
		        WHERE uidx > 0 <!--총게시글 수 구한후 refid로 검색어 조건-->
		</select>
		<!--관리자회원 리스트+페이징+검색-->
	<select id="muserList" parameterType="HashMap" resultType="userVO">	
			SELECT uidx
					, userID
					, userName
					, userPhone
					, userEmail
					, userType
				FROM (
					SELECT uidx
							, userID
							, userName
							, userPhone
							, userEmail
							, userType
							, row_number() over(ORDER BY uidx DESC)
							 AS unum
					FROM ausertb
					)
					WHERE unum BETWEEN #{rowStart} AND #{rowEnd}
					
					ORDER BY uidx DESC
	</select>
	<!-- 리뷰리스트 + 페이징 -->
	<select id="ReviewList" parameterType="SearchCriteria" resultType="ReviewVO">
	SELECT u.userName, qe.rvidx, qe.rvTitle, u.userID, qe.rvdate FROM ausertb u
	FULL OUTER JOIN
	(SELECT u.userName, u.uidx, r.rvidx, r.rvTitle, u.userID, r.rvdate,
		ROW_NUMBER() OVER(ORDER BY r.rvidx desc)AS rnum
	FROM ausertb u
	FULL OUTER JOIN reviewtb r
	on u.uidx = r.uidx
	WHERE u.uidx = r.uidx)qe
	ON u.uidx = qe.uidx
				
				WHERE rNum BETWEEN #{rowStart} AND #{rowEnd}
				ORDER BY qe.rvidx DESC
		</select>
		<!--리뷰 페이지 총 개수-->
	<select id="reviewcount" resultType="int">
		<![CDATA[
		SELECT count(rvidx)
		FROM reviewtb
		WHERE rvidx > 0
		]]>
	</select>
	<!--리뷰 삭제  -->
   <delete id="reviewDelete" parameterType="int">
			DELETE FROM REVIEWTB 
			WHERE rvidx = #{rvidx}
   </delete>
   <select id="reviewOne" parameterType="int" resultType="ReviewVO">
   			SELECT rvidx
   				   ,rvTitle
   				   ,rvContent
   				   ,rvDate
   				FROM REVIEWTB
   				WHERE rvidx = #{rvidx}
   </select>
   
   <!--문의내역 페이징 -->
	<select id="qnaList" parameterType="SearchCriteria" resultType="qnaVO">	
		 SELECT a.userName, qe.qna_idx, qe.qna_Qtitle, qe.qna_Acheck, qe.qna_Qdate FROM ausertb a
   FULL OUTER JOIN
     (SELECT a.userName, a.uidx, q.qna_idx, q.qna_Qtitle, q.qna_Acheck, q.qna_Qdate, 
								ROW_NUMBER() OVER(ORDER BY q.qna_idx desc) AS qnum
        FROM ausertb a 
        FULL OUTER JOIN qnatb q 
        on a.uidx = q.uidx
        WHERE a.uidx = q.uidx )qe
        ON a.uidx = qe.uidx
				WHERE qNum BETWEEN #{rowStart} AND #{rowEnd}
				ORDER BY qe.qna_idx DESC
	</select>
	<!--문의 페이지 총 개수-->
	<select id="qnacount" resultType="int">
		<![CDATA[
		SELECT count(qna_idx)
		FROM qnatb
		WHERE qna_idx > 0
		]]>
	</select>
	<!-- 숙소리스트 + 페이징-->
	<select id="managerRoomList" parameterType="SearchCriteria" resultType="LodgingVO">
	SELECT lidx
					, limagename
					, lodgingname
					, lodgingaddr
					, lodgingkind
				FROM (
					SELECT lidx
							, limagename
							, lodgingname
							, lodgingaddr
							, lodgingkind
							, row_number() over(ORDER BY lidx DESC)
							 AS lnum
					FROM lodgingtb
					)
					WHERE lnum BETWEEN #{rowStart} AND #{rowEnd}
					
					ORDER BY lidx DESC
	</select>
	<!--숙소 페이지 총 개수-->
	<select id="RoomListcount" resultType="int">
		<![CDATA[
		SELECT count(lidx)
		FROM lodgingtb
		WHERE lidx > 0
		]]>
	</select>
</mapper>





















