<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.projectA.mapper.sellerMapper">


	<!-- 회원정보 -->
	<select id = "SellerOne" resultType="LodgingVO" parameterType = "int">
	
				SELECT 	 u.uidx
						, u.userID
						, u.userName
						, u.userPassword
						, u.userEmail
						, u.userPhone
						, u.userType
						, l.lodgingname
						, l.lodgingaddr
						, l.lidx
						, l.limagename
					FROM ausertb u
					LEFT OUTER JOIN lodgingtb l
					ON u.uidx = l.uidx 
					WHERE u.uidx= #{uidx}
	</select>
	
	<!--회원정보 수정 update는 inner join이 안되서 두개의 테이블로 함 -->
	<update id = "sellerUpdate" parameterType = "UserVO">
			UPDATE ausertb 
			SET userPhone = #{userPhone},
				userPassword = #{userPassword},
				userEmail = #{userEmail}
			WHERE uidx = #{uidx}
		
	</update>
	<!--숙소정보 수정  -->
	<update id = "sellerUpdate2" parameterType = "LodgingVO">
			UPDATE lodgingtb
			SET lodgingname = #{lodgingname},
				lodgingaddr = #{lodgingaddr}
			WHERE uidx = #{uidx}
	</update>
	
	
	<!-- Qna -->	
	
	
	<!--문의게시판 list-->
        <select id= "qnaList" resultType="QnaVO" parameterType="int">
    
				SELECT a.uidx
					, q.QnA_idx
					, q.uidx
					, q.userType
					, q.qna_Qcontent
					, q.qna_Qtitle
					, q.qna_Qdate 
					, q.qna_Acheck
				FROM ausertb a
				LEFT OUTER JOIN qnatb q 
				ON a.uidx = q.uidx 
				WHERE a.uidx= #{uidx}  ORDER BY QnA_idx DESC
                
 
        </select>
        
    <!--문의글 페이징-->
    <select id="QnaPaging" resultType="QnaVO" parameterType="Criteria" >
		        select QnA_idx, qna_Qtitle, qna_Qdate, qna_Acheck
					from (select QnA_idx, qna_Qtitle, qna_Qdate, qna_Acheck, 
					row_number() over(order by QnA_idx desc)
					as rNum from qnatb)mb 
				where rNum between #{rowStart} and #{rowEnd} order by QnA_idx desc
		    
    </select>
	<select id = "listCount" resultType="int">
			select count(Qna_idx)
			from qnatb where Qna_idx > 0
	</select>	
	<!--문의하기 insert  -->
	<insert id="qnaInsert" parameterType="QnaVO">
	<![CDATA[
		INSERT INTO qnatb (
						 QnA_idx
						, uidx 
						, qna_Qcontent
						, qna_Qtitle
						, qna_Qdate
						, qna_Adate
						, usertype 
						)
					 VALUES(
						 QnA_idx_seq.nextval 
					    , #{uidx} 
					    , #{qna_Qcontent}
						, #{qna_Qtitle}
					 	, sysdate
					 	, sysdate
					 	, #{usertype}
					 	)	
	]]>
	<selectKey order="AFTER" resultType="integer" keyProperty="QnA_idx"> <!-- after:주 쿼리가 실행된 이후에 호출하겠다 -->
		SELECT MAX(QnA_idx) from qnatb <!--최대값을 구하라 / 최근 입력한 게시글이 가장 최근수=가장큰수  -->
	</selectKey>
		 			
	</insert>
	
	<!--문의 글 보기 -->
	<select id = "qnaOne" resultType="QnaVO" parameterType = "integer">
   					SELECT QnA_idx
					, uidx
					, qna_Qcontent
					, qna_Qtitle
					, qna_Qdate
					, qna_Acontent					
					FROM qnatb
					WHERE QnA_idx = #{QnA_idx}
	</select>
	<!--문의 글 삭제  -->
   <delete id="qnaDelete" parameterType="int">
      DELETE FROM qnatb 
      WHERE QnA_idx = #{QnA_idx}
   </delete>
	
	<!--문의 글 수정-->
	<update id="qnaModify" parameterType="int">
		UPDATE qnatb SET 
			qna_Qtitle = #{qna_Qtitle}  
			,qna_Qcontent = #{qna_Qcontent}
			WHERE QnA_idx = #{QnA_idx}
	</update>

	<!--판매자 객실목록  -->
	<select id="roomlist" resultType="RoomVO" parameterType="int">
			SELECT l.uidx
				, l.lidx
				, r.ridx
				, r.rimage1
				, r.rtype
				, r.rprice
				, r.rnum 
			FROM lodgingtb l
			LEFT OUTER JOIN roomtb r
			ON l.lidx = r.lidx 
			WHERE l.uidx =#{uidx}
	</select>
	
	<!--판매자 객실 삭제  -->
	<delete id = "roomdel" parameterType="int">
			DELETE FROM roomtb
	           WHERE ridx = #{ridx}
	</delete>
	
	<!--객실등록 -->
	<insert id = "roomup" parameterType="RoomVO">
	
			INSERT INTO roomtb (
						ridx
						, rtype
						, rnum
						, rprice
						, maxmen
						, stdmen
						, gdsThumbImg
						, rimage1
						, bed
						, lidx  )
					VALUES (
						ridx_seq.nextval
						, #{rtype}
						, #{rnum}
						, #{rprice}
						, #{maxmen}
						, #{stdmen}
						, #{gdsThumbImg}
						, #{rimage1}
						, #{bed}
						, #{lidx})
						
		<selectKey keyProperty="ridx" resultType="int" order="AFTER">	<!--AFTER : 방금 입력한 값의 특정 값 리턴 (ridx_nextval리턴)  -->
				select ridx_seq.currval as ridx FROM dual <!-- dual: 특정테이블 칼럼이 아닌경우 -->
		</selectKey>
	</insert>
	
	<!--체크박스 등록-->	
	<insert id = "roomInCh" parameterType="RoominVO">
				INSERT INTO ROOMINTB VALUES(
				ROOMIN_IDX_SEQ.NEXTVAL
				,#{ridx}
				,#{spa}
				,#{wifi}
				,#{tv}
				,#{refri}
				,#{bath}
				,#{iron}
				,#{minibar}
				,#{bathitem}
				,#{aircon}
				,#{shower}
				,#{dryer}
				,#{ricecooker}
				,#{addinfo1}
				,#{addinfo2}
				,#{addinfo3}
				,#{addinfo4}
				,#{addinfo5})
	
	</insert>
	
	<!--객실등록 lidx값 -->
	<select id="lidxone" resultType="LodgingVO" parameterType="int">
					SELECT lidx 
					FROM lodgingtb 
					WHERE uidx = #{uidx}
	</select>
	<!--
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	-->
	<!-- 숙소 등록 -->
	<insert id="lodgingUp" parameterType="lodgingVO">
	INSERT INTO LODGINGTB (
					  lidx
					, lodgingkind
					, lodgingname
					, lodgingaddr
					, local
					, uidx
					, limagename
					, intro
				)		
				VALUES (
					lidx_seq.nextval
					, #{lodgingkind}
					, #{lodgingname}
					, #{lodgingaddr}
					, #{local}
					, #{uidx}
					, #{limagename}
					, #{intro}					
				)
				
		<selectKey keyProperty="lidx" resultType="int" order="AFTER">	<!--AFTER : 방금 입력한 값의 특정 값 리턴 (lidx_nextval리턴)  -->
				select lidx_seq.currval as lidx FROM dual <!-- dual: 특정테이블 칼럼이 아닌경우 -->
		</selectKey>
	</insert>
	<update id="waiting" parameterType="int">
		UPDATE AUSERTB 
		   SET lodging = 'Waiting'
		 WHERE uidx = #{uidx}
	</update>
	<insert id="lodginginUp" parameterType="lodginginVO">
		INSERT INTO LODGINGINTB
						VALUES(
							  lodgingin_idx_seq.nextval
							, #{lidx}
							, #{FITNESS}
							, #{SAUNA}
							, #{RESTAURANT}
							, #{LOUNGE}
							, #{BBQ}
							, #{PUBLICSPA}
							, #{SEMINAR}
							, #{SINGING}
							, #{WASHINGMACHINE}
							, #{DEHYDRATOR}
							, #{COOKING}
							, #{spa}
							, #{pool}
							, #{golf}
							, #{elevator}
							, #{pc}
							, #{cafe}
							, #{footvolleyball}
							, #{store}
							, #{dining}
							, #{dryer}
							, #{parking}
							, #{publicshower}
							, #{ski}
							, #{pickup}
							, #{printer}
							, #{locker}
							, #{breakfast}
							, #{valetparking}
							, #{dog}
							, #{inroomcooking}
							, #{keepluggage}
							, #{freeparking}
							, #{inroomsmoking}
							, #{nosmoking}
							, #{creditcard}
						)
	</insert>
	<insert id="lodginginfoUp" parameterType="lodginginfoVO">
		INSERT INTO LODGINGINFOTB
						VALUES(
							  lodginginfo_idx_seq.nextval
							, #{lidx}
							, #{area1}
							, #{area2}
							, #{area3}
							, #{area4}
							, #{area5}
							, #{basic1}
							, #{basic2}
							, #{basic3}
							, #{basic4}
							, #{basic5}
							, #{odd1}
							, #{odd2}
							, #{odd3}
							, #{odd4}
							, #{odd5}
						)
	</insert>
	<!-- lodgingtb, lodgingintb, lodginginfotb 를 담음 -->
	<resultMap type="HashMap" id="lodgingAll">
		<id column="lidx" property="lidx" />
		<id column="lodgingkind" property="lodgingkind" />
		<id column="lodgingname" property="lodgingname" />
		<id column="lodgingaddr" property="lodgingaddr" />
		<id column="satis" property="satis" />
		<id column="reviewnum"	property="reviewnum" />
		<id column="local" property="local" />
		<id column="limagename" property="limagename" />
		<id column="intro" property="intro" />
		<id column="FITNESS" property="FITNESS" />
		<id column="SAUNA" property="SAUNA" />
		<id column="RESTAURANT"	property="RESTAURANT" />
		<id column="LOUNGE" property="LOUNGE" />
		<id column="BBQ" property="BBQ" />
		<id column="PUBLICSPA" property="PUBLICSPA" />
		<id column="SEMINAR" property="SEMINAR" />
		<id column="SINGING" property="SINGING" />
		<id column="WASHINGMACHINE" property="WASHINGMACHINE" />
		<id column="DEHYDRATOR" property="DEHYDRATOR" />
		<id column="COOKING" property="COOKING" />
		<id column="spa" property="spa" />
		<id column="pool" property="pool" />
		<id column="golf" property="golf" />
		<id column="elevator" property="elevator" />
		<id column="pc" property="pc" />
		<id column="cafe" property="cafe" />
		<id column="footvolleyball" property="footvolleyball" />
		<id column="store" property="store" />
		<id column="dining" property="dining" />
		<id column="dryer" property="dryer" />
		<id column="parking" property="parking" />
		<id column="publicshower" property="publicshower" />
		<id column="ski" property="ski" />
		<id column="pickup" property="pickup" />
		<id column="printer" property="printer" />
		<id column="locker" property="locker" />
		<id column="breakfast" property="breakfast" />
		<id column="valetparking" property="valetparking" />
		<id column="dog" property="dog" />
		<id column="inroomcooking" property="inroomcooking" />
		<id column="keepluggage" property="keepluggage" />
		<id column="freeparking" property="freeparking" />
		<id column="inroomsmoking" property="inroomsmoking" />
		<id column="nosmoking" property="creditcard" />
		<id column="area1" property="area1" />
		<id column="area2" property="area2" />
		<id column="area2" property="area2" />
		<id column="area3" property="area3" />
		<id column="area4" property="area4" />
		<id column="area5" property="area5" />
		<id column="basic1" property="basic1" />
		<id column="basic2" property="basic2" />
		<id column="basic3" property="basic3" />
		<id column="basic4" property="basic4" />
		<id column="basic5" property="basic5" />
		<id column="odd1" property="odd1" />
		<id column="odd2" property="odd2" />
		<id column="odd3" property="odd3" />
		<id column="odd4" property="odd4" />
		<id column="odd5" property="odd5" />
	</resultMap> 
		<!-- column은 DB의 출력하는 칼럼명, property는 Key값 -->
	<!-- 숙소 수정 페이지 -->
	<select id="lodgingModi" parameterType="int" resultMap="lodgingAll">
		SELECT * 
		  FROM LODGINGTB l, LODGINGINTB i, LODGINGINFOTB f
		 WHERE l.lidx = i.lidx
		   AND l.lidx = f.lidx	
		   AND l.lidx = #{lidx}
	</select>
	<!-- 숙소 수정 -->
	<update id="lodgingModify" parameterType="lodgingVO">
		UPDATE LODGINGTB 
		   SET lodgingkind = #{lodgingkind}
		     , lodgingname = #{lodgingname}
			 , lodgingaddr = #{lodgingaddr}
			 , local = #{local}
			 , limagename = #{limagename}
			 , intro = #{intro}					
		WHERE lidx = #{lidx}
	</update>
	<update id="lodginginModify" parameterType="lodginginVO">
		UPDATE LODGINGinTB 
		   SET fitness = #{FITNESS}
			 , SAUNA = #{SAUNA}
			 , RESTAURANT = #{RESTAURANT}
			 , LOUNGE = #{LOUNGE}
			 , BBQ = #{BBQ}
			 , PUBLICSPA = #{PUBLICSPA}
			 , SEMINAR = #{SEMINAR}
			 , SINGING = #{SINGING}
			 , WASHINGMACHINE = #{WASHINGMACHINE}
			 , DEHYDRATOR = #{DEHYDRATOR}
			 , COOKING = #{COOKING}
			 , spa = #{spa}
			 , pool = #{pool}
			 , golf = #{golf}
			 , elevator = #{elevator}
			 , pc = #{pc}
			 , cafe = #{cafe}
			 , footvolleyball = #{footvolleyball}
			 , store = #{store}
			 , dining = #{dining}
			 , dryer = #{dryer}
			 , parking = #{parking}
			 , publicshower = #{publicshower}
			 , ski = #{ski}
			 , pickup = #{pickup}
			 , printer = #{printer}
			 , locker = #{locker}
			 , breakfast = #{breakfast}
			 , valetparking = #{valetparking}
			 , dog = #{dog}
			 , inroomcooking = #{inroomcooking}
			 , keepluggage = #{keepluggage}
			 , freeparking = #{freeparking}
			 , inroomsmoking = #{inroomsmoking}
			 , nosmoking = #{nosmoking}
			 , creditcard = #{creditcard}
		WHERE lidx = #{lidx}
	</update>
	<update id="lodginginfoModify" parameterType="lodginginfoVO">
		UPDATE LODGINGinfoTB 
		   SET area1 = #{area1}
			 , area2 = #{area2}
			 , area3 = #{area3}
			 , area4 = #{area4}
			 , area5 = #{area5}
			 , basic1 = #{basic1}
			 , basic2 = #{basic2}
			 , basic3 = #{basic3}
			 , basic4 = #{basic4}
			 , basic5 = #{basic5}
			 , odd1 = #{odd1}
			 , odd2 = #{odd2}
			 , odd3 = #{odd3}
			 , odd4 = #{odd4}
			 , odd5 = #{odd5}
		WHERE lidx = #{lidx}
	</update>
	<!-- 숙소 삭제 -->
	<delete id="loDel" parameterType="int">
		DELETE FROM lodgingtb
		 WHERE lidx = #{lidx}
	</delete>
	<update id="N" parameterType="int">
		UPDATE AUSERTB 
		   SET lodging = 'N'
		 WHERE uidx = #{uidx}
	</update>
	<!--
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	-->
	<!--객실 수정 정보-->
	<select id="roomModiInfo" resultType="RoominVO" parameterType = "int">
			SELECT 	 r.ridx
	 				, r.rtype
					, r.rnum
					, r.rprice
					, r.maxmen
					, r.stdmen
					, r.gdsThumbImg
					, r.rimage1
					, r.bed
					, i.addinfo1
					, i.addinfo2
					, i.addinfo3
					, i.addinfo4
					, i.addinfo5
					FROM roomtb r
					LEFT OUTER JOIN roomintb i
					ON r.ridx = i.ridx 
					WHERE r.ridx= #{ridx}
	</select>
	
	<!--객실수정-->
	<update id="roomModify" parameterType="RoomVO">
			UPDATE roomtb SET 
				  rtype = #{rtype}
				, rnum = #{rnum}
				, rprice = #{rprice}
				, maxmen = #{maxmen}
				, stdmen = #{stdmen}
				, rimage1 = #{rimage1}
				, bed = #{bed}
				 WHERE ridx = #{ridx} 
	</update>
	<update id="roomModify2" parameterType="RoominVO">
	UPDATE roomintb SET spa = #{spa}
				,wifi = #{wifi}
				,tv = #{tv}
				,refri = #{refri}
				,bath = #{bath}
				,iron = #{iron}
				,minibar = #{minibar}
				,bathitem = #{bathitem}
				,aircon = #{aircon}
				,shower = #{shower}
				,dryer = #{dryer}
				,ricecooker = #{ricecooker}
				,addinfo1 = #{addinfo1}
				,addinfo2 = #{addinfo2}
				,addinfo3 = #{addinfo3}
				,addinfo4 = #{addinfo4}
				,addinfo5 = #{addinfo5} 
				WHERE ridx = #{ridx}
	
	</update>
	

	
</mapper>






