<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0/EN" 
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.projectA.mapper.sellerMapper">


	<!-- 회원정보 -->
	<select id = "SellerOne" resultType="LodgingVO" parameterType = "int">
	
				SELECT 	 u.uidx
						, u.userID
						, u.userName
						, u.userPassword
						, u.userEmail
						, u.userPhone
						, u.userType
						, l.lodgingname
						, l.lodgingaddr
						, l.lidx
						, l.limagename
					FROM ausertb u
					LEFT OUTER JOIN lodgingtb l
					ON u.uidx = l.uidx 
					WHERE u.uidx= #{uidx}
	</select>
	
	<!--회원정보 수정 update는 inner join이 안되서 두개의 테이블로 함 -->
	<update id = "sellerUpdate" parameterType = "UserVO">
			UPDATE ausertb 
			SET userPhone = #{userPhone},
				userPassword = #{userPassword},
				userEmail = #{userEmail}
			WHERE uidx = #{uidx}
		
	</update>
	<!--숙소정보 수정  -->
	<update id = "sellerUpdate2" parameterType = "LodgingVO">
			UPDATE lodgingtb
			SET lodgingname = #{lodgingname},
				lodgingaddr = #{lodgingaddr}
			WHERE uidx = #{uidx}
	</update>
	
	
	<!-- Qna -->	
	
	
	<!--문의게시판 list-->
        <select id= "qnaList" resultType="QnaVO" parameterType="int">
    
					SELECT a.uidx
						, q.QnA_idx
						, q.uidx
						, q.userType
						, q.qna_Qcontent
						, q.qna_Qtitle
						, q.qna_Qdate 
						, q.qna_Acheck
					FROM ausertb a
					LEFT OUTER JOIN qnatb q 
					ON a.uidx = q.uidx 
					WHERE a.uidx= #{uidx}  ORDER BY QnA_idx DESC
                
 
        </select>
    
	
	<!--문의하기 insert  -->
	<insert id="qnaInsert" parameterType="QnaVO">
	<![CDATA[
		INSERT INTO qnatb (
						 QnA_idx
						, uidx 
						, qna_Qcontent
						, qna_Qtitle
						, qna_Qdate
						, qna_Adate
						, usertype 
						)
					 VALUES(
						 QnA_idx_seq.nextval 
					    , #{uidx} 
					    , #{qna_Qcontent}
						, #{qna_Qtitle}
					 	, sysdate
					 	, sysdate
					 	, #{usertype}
					 	)	
	]]>
	<selectKey order="AFTER" resultType="integer" keyProperty="QnA_idx"> <!-- after:주 쿼리가 실행된 이후에 호출하겠다 -->
		SELECT MAX(QnA_idx) from qnatb <!--최대값을 구하라 / 최근 입력한 게시글이 가장 최근수=가장큰수  -->
	</selectKey>
		 			
	</insert>
	
	<!--문의 글 보기 -->
	<select id = "qnaOne" resultType="QnaVO" parameterType = "integer">
   					SELECT QnA_idx
					, uidx
					, qna_Qcontent
					, qna_Qtitle
					, qna_Qdate
					FROM qnatb
					WHERE QnA_idx = #{QnA_idx}
	</select>

	<!--판매자 객실목록  -->
	<select id="roomlist" resultType="RoomVO" parameterType="int">
			SELECT l.uidx
				, l.lidx
				, r.ridx
				, r.rimage1
				, r.rtype
				, r.rprice
				, r.rnum 
			FROM lodgingtb l
			LEFT OUTER JOIN roomtb r
			ON l.lidx = r.lidx 
			WHERE l.uidx =#{uidx}
	</select>
	
	<!--판매자 객실 삭제  -->
	<delete id = "roomdel" parameterType="int">
			DELETE FROM roomtb
	           WHERE ridx = #{ridx}
	</delete>
	
	<!--객실등록 -->
	<insert id = "roomup" parameterType="RoomVO">
	
			INSERT INTO roomtb (
						ridx
						, rtype
						, rnum
						, rprice
						, maxmen
						, stdmen
						, gdsThumbImg
						, rimage1
						, bed
						, lidx  )
					VALUES (
						ridx_seq.nextval
						, #{rtype}
						, #{rnum}
						, #{rprice}
						, #{maxmen}
						, #{stdmen}
						, #{gdsThumbImg}
						, #{rimage1}
						, #{bed}
						, #{lidx})
						
		<selectKey keyProperty="ridx" resultType="int" order="AFTER">	<!--AFTER : 방금 입력한 값의 특정 값 리턴 (ridx_nextval리턴)  -->
				select ridx_seq.currval as ridx FROM dual <!-- dual: 특정테이블 칼럼이 아닌경우 -->
		</selectKey>
	</insert>
	
	<!--체크박스 등록-->	
	<insert id = "roomInCh" parameterType="RoominVO">
				INSERT INTO ROOMINTB VALUES(
				ROOMIN_IDX_SEQ.NEXTVAL
				,#{ridx}
				,#{spa}
				,#{wifi}
				,#{tv}
				,#{refri}
				,#{bath}
				,#{iron}
				,#{minibar}
				,#{bathitem}
				,#{aircon}
				,#{shower}
				,#{dryer}
				,#{ricecooker}
				,#{addinfo1}
				,#{addinfo2}
				,#{addinfo3}
				,#{addinfo4}
				,#{addinfo5})
	
	</insert>
	
	<!--객실등록 lidx값 -->
	<select id="lidxone" resultType="LodgingVO" parameterType="int">
					SELECT lidx 
					FROM lodgingtb 
					WHERE uidx = #{uidx}
	</select>
	<!-- 숙소 등록 -->
	<insert id="lodgingUp" parameterType="lodgingVO">
	INSERT INTO LODGINGTB (
					  lidx
					, lodgingkind
					, lodgingname
					, lodgingaddr
					, local
					, uidx
					, limagename
					, intro
				)		
				VALUES (
					lidx_seq.nextval
					, #{lodgingkind}
					, #{lodgingname}
					, #{lodgingaddr}
					, #{local}
					, #{uidx}
					, #{limagename}
				)
	</insert>
	<update id="waiting" parameterType="userVO">
		UPDATE AUSERTB 
		   SET lodging = 'Waiting'
		 WHERE uidx = #{uidx}
				
	</update>
	
	<!--객실 수정 정보-->
	<select id="roomModiInfo" resultType="RoominVO" parameterType = "int">
			SELECT 	 r.ridx
	 				, r.rtype
					, r.rnum
					, r.rprice
					, r.maxmen
					, r.stdmen
					, r.gdsThumbImg
					, r.rimage1
					, r.bed
					, i.addinfo1
					, i.addinfo2
					, i.addinfo3
					, i.addinfo4
					, i.addinfo5
					FROM roomtb r
					LEFT OUTER JOIN roomintb i
					ON r.ridx = i.ridx 
					WHERE r.ridx= #{ridx}
	</select>
	
	<!--객실수정-->
	<update id="roomModify" parameterType="RoomVO">
			UPDATE roomtb SET 
				  rtype = #{rtype}
				, rnum = #{rnum}
				, rprice = #{rprice}
				, maxmen = #{maxmen}
				, stdmen = #{stdmen}
				, rimage1 = #{rimage1}
				, bed = #{bed}
				 WHERE ridx = #{ridx} 
	</update>
	<update id="roomModify2" parameterType="RoominVO">
	UPDATE roomintb SET spa = #{spa}
				,wifi = #{wifi}
				,tv = #{tv}
				,refri = #{refri}
				,bath = #{bath}
				,iron = #{iron}
				,minibar = #{minibar}
				,bathitem = #{bathitem}
				,aircon = #{aircon}
				,shower = #{shower}
				,dryer = #{dryer}
				,ricecooker = #{ricecooker}
				,addinfo1 = #{addinfo1}
				,addinfo2 = #{addinfo2}
				,addinfo3 = #{addinfo3}
				,addinfo4 = #{addinfo4}
				,addinfo5 = #{addinfo5} 
				WHERE ridx = #{ridx}
	
	</update>

</mapper>






